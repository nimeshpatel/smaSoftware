#!/usr/bin/perl -I/application/lib -w
#do 'sma.pl';  #not needed, the functions in sma.pl aren't quite the same as the ones here. -RH
##########################################
# Perl Script for Flux Calib             #
# Version which uses Nimesh's Lookup     #
# Prioritize Quasar List !!              #
#                                        #
# Author: S. Takakuwa (C.f.A.) 2004March #
#                                        #
# Sep.8  2004 Add ALL quasars            #
# Sep 22 2004 Calc EL by Myself          #
#             Add H.A. Range             #
##########################################

###########################################################################
#Modifications on Dec 20, 2008 by Ryan Howie
#I added many new features to the flux script in an effort to not have to 
#edit the script everytime it gets run.  The --help command contains all
#the new features.
###########################################################################

###########################################################################
#Modifications on Oct 30, 2008 by Ryan Howie
#I added a restart option (-r) to skip the flux calibrators, if requested.
###########################################################################

###########################################################################
# Modifications on Aug 31, 2006 by Shelbi Hostler:
# -- I compared the List of Quasars to the Submillimeter Calibrator list
# on the website http://sma1.sma.hawaii.edu/callist.html.  I added to
# the source list the quasars that were listed on the table as having
# been observed by the SMA at some point in time, that were in the SMA
# catalog, but that were not on the list.  If you experience any errors 
# with the list of source quasars in this script, please let me know:
# shostler@cfa.harvard.edu.  Thanks!
###########################################################################
# 
###########################################################################
# Modifications on September 19, 2005 by Brooks:
# -- I checked all of the sources against hal9000's SMA catalog, and either 
# typos were corrected or the sources were flagged -1 (do not observe)
# -- I replaced the fixed 50 deg. Sun avoidance angle with a variable 
# $SUNANGLE that can be set by the observer.  (50 deg. was too inefficient)
# -- I changed the min. elev. angle limit $ELLLIMIT from 20 to 30 degrees.
###########################################################################

###########################################################################
# April 17, 2006 by Sherry:
# I added more flux calibrators, which are Neptune and Titan, alone with
# Mark's comments.
#
# May 19, 2006 by Sherry:
# Finished (1) adding the entire catalog into nflux.pl
#          (2) combining sflux.pl with nflux.pl
###########################################################################

############################################################
# Specify HourAngle, and Calibrator Here in J2000 NAME !!! #
############################################################

#This is now controled using switches, -e and -l
$HAULIMIT=4.0;   # Upper Hour Angle Limit
#$HAULIMIT=0.0;   # Upper Hour Angle Limit 
#$HALLIMIT=0.0;   # Lower Hour Angle Limit
$HALLIMIT=-4.0;  # Lower Hour Angle Limit

#a list of all the useable calibrators, to compare with the one given
@cal = ();
$cal[0] = "3c111";
$cal[1] = "3c84";
$cal[2] = "0854+201";
$cal[3] = "0359+509";
$cal[4] = "0423-013";
$cal[5] = "0522-364";
$cal[6] = "1058+015";
$cal[7] = "3c279";
$cal[8] = "1337-129";
$cal[9] = "1743-038";
$cal[10] = "1751+096";
$cal[11] = "1924-292";
$cal[12] = "2148+069";
$cal[13] = "2232+117";
$cal[14] = "3c454.3";
$cal[15] = "3c273";
$cal[16] = "0319+415";  	
$cal[17] = "0418+380";
$cal[18] = "1229+020";
$cal[19] = "1256-057";
$cal[20] = "2253+161";
$cal[21] = "3c345";


#Mark's priority list.  Everything on this list will be observed everytime a flux track is run (if available).
#Use the J2000 name or else it won't be observed!  It also has to be on the list below.
@highpriority = ();
$highpriority[0] = "0238+166";
$highpriority[1] = "0530+135";
$highpriority[2] = "0826-373";
$highpriority[3] = "0747-331";
$highpriority[4] = "0510+180";
$highpriority[5] = "0357+233";
$highpriority[6] = "0418+380";
$highpriority[7] = "0449+113";
$highpriority[8] = "1713-269";



############################################################ 
# List of Quasars                                         #
# Need to be updated !!                                   #
#                                                         #
# May 19, 2006 -- Sherry                                  #
# I added all the quasars in sma catalog and sflux script.#
###########################################################

#The priority box could be just a for loop to make them all 0 now, since the priorities are set elsewhere.
# Priority 1: will be observed as a first priority if it is available
# Priority 0: will be observed randomly
# Priority -1: will not be observed
#Use the J2000 name if adding to the list!
#Exact RA and Dec need to find their way into the script if this list gets removed!
$source[0]="0005+383"   ;$ra[0]=1.48822     ;$dec[0]=+38.33754    ;
$source[1]="0006-063"   ;$ra[1]=1.55788     ;$dec[1]=-6.39314     ;
$source[2]="0006+243"   ;$ra[2]=1.70328     ;$dec[2]=+24.37677    ;
$source[3]="0010+109"   ;$ra[3]=2.62919     ;$dec[3]=+10.97486    ;
$source[4]="0013+408"   ;$ra[4]=3.37970     ;$dec[4]=+40.86031    ;
$source[5]="0014+612"   ;$ra[5]=3.70339     ;$dec[5]=+61.29551    ;
$source[6]="0019+203"   ;$ra[6]=4.90772     ;$dec[6]=+20.36267    ;
$source[7]="0019+260"   ;$ra[7]=4.91575     ;$dec[7]=+26.04785    ;
$source[8]="0019+734"   ;$ra[8]=4.94077     ;$dec[8]=+73.45833    ;
$source[9]="0022+002"   ;$ra[9]=5.60594     ;$dec[9]=+00.24893    ;
$source[10]="0034+279"  ;$ra[10]=8.68119    ;$dec[10]=+27.90714   ;
$source[11]="0050-094"  ;$ra[11]=12.67215   ;$dec[11]=-9.48478    ;
$source[12]="0051-068"  ;$ra[12]=12.78420    ;$dec[12]=-06.83395   ;
$source[13]="0057+303"  ;$ra[13]=14.45367    ;$dec[13]=+30.35244   ;
$source[14]="0102+584"  ;$ra[14]=15.69067    ;$dec[14]=+58.40309   ;
$source[15]="0105+483"  ;$ra[15]=16.45803    ;$dec[15]=+48.31755   ;
$source[16]="0106-405"  ;$ra[16]=16.68794    ;$dec[16]=-40.57221   ;
$source[17]="0108+015"  ;$ra[17]=17.16154    ;$dec[17]=+01.58342   ;
$source[18]="0110-076"  ;$ra[18]=17.70842    ;$dec[18]=-07.69475   ;
$source[19]="0112+227"  ;$ra[19]=18.02427    ;$dec[19]=+22.74410   ;
$source[20]="0113+498"  ;$ra[20]=18.36252    ;$dec[20]=+49.80667   ;
$source[21]="0115-014"  ;$ra[21]=18.82124    ;$dec[21]=-01.45127   ;
$source[22]="0116-116"  ;$ra[22]=19.05217    ;$dec[22]=-11.60428   ;
$source[23]="0118-216"  ;$ra[23]=19.73859    ;$dec[23]=-21.69170   ;
$source[24]="0120-270"  ;$ra[24]=20.13193    ;$dec[24]=-27.02351   ;
$source[25]="0121+118"  ;$ra[25]=20.42331    ;$dec[25]=+11.83067   ;
$source[26]="0121+043"  ;$ra[26]=20.48692    ;$dec[26]=+04.37353   ;
$source[27]="0122+250"  ;$ra[27]=20.66173    ;$dec[27]=+25.04216   ;
$source[28]="0125-000"  ;$ra[28]=21.37017    ;$dec[28]=+0.09887    ;
$source[29]="0132-169"  ;$ra[29]=23.18119    ;$dec[29]=-16.91347   ;
$source[30]="0136+478"  ;$ra[30]=24.24414    ;$dec[30]=+47.85808   ;
$source[31]="0137-245"  ;$ra[31]=24.40977    ;$dec[31]=-24.51496   ;
$source[32]="0141-094"  ;$ra[32]=25.35763    ;$dec[32]=-9.47879    ;
$source[33]="0149+059"  ;$ra[33]=27.34321    ;$dec[33]=+05.93154   ;
$source[34]="0149+189"  ;$ra[34]=27.45716    ;$dec[34]=+18.95572   ;
$source[35]="0152+221"  ;$ra[35]=28.07524    ;$dec[35]=+22.11880   ;
$source[36]="0204+152"  ;$ra[36]=31.21005    ;$dec[36]=+15.23640   ;
$source[37]="0204-170"  ;$ra[37]=31.24030    ;$dec[37]=-17.02217   ;
$source[38]="0205+322"  ;$ra[38]=31.27052    ;$dec[38]=+32.20835   ;
$source[39]="0215-023"  ;$ra[39]=33.92507    ;$dec[39]=-02.38243   ;
$source[40]="0217+738"  ;$ra[40]=34.37838    ;$dec[40]=+73.82572   ;
$source[41]="0217+017"  ;$ra[41]=34.45397    ;$dec[41]=+01.74713   ;
$source[42]="0219+013"  ;$ra[42]=34.77926    ;$dec[42]=+01.34996   ;
$source[43]="0222-346"  ;$ra[43]=35.73500    ;$dec[43]=-34.69131   ;
$source[44]="0224+069"  ;$ra[44]=36.11845    ;$dec[44]=+06.98981   ;
$source[45]="0228+673"  ;$ra[45]=37.20854    ;$dec[45]=+67.35084   ;
$source[46]="0237+288"  ;$ra[46]=39.46835    ;$dec[46]=+28.80249   ;
$source[47]="0238+166"  ;$ra[47]=39.66220    ;$dec[47]=+16.61646   ;
$source[48]="0239+042"  ;$ra[48]=39.96359    ;$dec[48]=+04.27261   ;
$source[49]="0241-082"  ;$ra[49]=40.26999    ;$dec[49]=-8.25576    ;
$source[50]="0242+110"  ;$ra[50]=40.62154    ;$dec[50]=+11.01686   ;
$source[51]="0242-215"  ;$ra[51]=40.64962    ;$dec[51]=-21.54053   ;
$source[52]="0244+624"  ;$ra[52]=41.24040    ;$dec[52]=+62.46847   ;
$source[53]="0251+432"  ;$ra[53]=42.89390    ;$dec[53]=+43.25439   ;
$source[54]="0259+425"  ;$ra[54]=44.90705    ;$dec[54]=+42.59716   ;
$source[55]="0303+472"  ;$ra[55]=45.89684    ;$dec[55]=+47.27118   ;
$source[56]="0309+104"  ;$ra[56]=47.26509    ;$dec[56]=+10.48787   ;
$source[57]="0310+382"  ;$ra[57]=47.70783    ;$dec[57]=+38.24828   ;
$source[58]="0313+413"  ;$ra[58]=48.25817    ;$dec[58]=+41.33366   ;
$source[59]="0319+415"  ;$ra[59]=49.95067    ;$dec[59]=+41.51169   ;
$source[60]="0325+469"  ;$ra[60]=51.33460    ;$dec[60]=+46.91852   ;
$source[61]="0325+226"  ;$ra[61]=51.40339    ;$dec[61]=+22.40010   ;
$source[62]="0329-239"  ;$ra[62]=52.47531    ;$dec[62]=-23.95243   ;
$source[63]="0334-401"  ;$ra[63]=53.55689    ;$dec[63]=-40.14038   ;
$source[64]="0336+323"  ;$ra[64]=54.12545    ;$dec[64]=+32.30815   ;
$source[65]="0339-017"  ;$ra[65]=54.87890    ;$dec[65]=-1.77661    ;
$source[66]="0340-213"  ;$ra[66]=55.14836    ;$dec[66]=-21.32532   ;
$source[67]="0346+540"  ;$ra[67]=56.64376    ;$dec[67]=+54.01641   ;
$source[68]="0348-278"  ;$ra[68]=57.15893    ;$dec[68]=-27.82043   ;
$source[69]="0354+467"  ;$ra[69]=58.62506    ;$dec[69]=+46.72187   ;
$source[70]="0359+509"  ;$ra[70]=59.87394    ;$dec[70]=+50.96393   ;
$source[71]="0359+323"  ;$ra[71]=59.93713    ;$dec[71]=+32.34643   ;
$source[72]="0401+042"  ;$ra[72]=60.33297    ;$dec[72]=+4.22622    ;
$source[73]="0403-360"  ;$ra[73]=60.97395    ;$dec[73]=-36.08386   ;
$source[74]="0405-131"  ;$ra[74]=61.39167    ;$dec[74]=-13.13713   ;
$source[75]="0406-384"  ;$ra[75]=61.74598    ;$dec[75]=-38.44112   ;
$source[76]="0410+769"  ;$ra[76]=62.69002    ;$dec[76]=+76.94591   ;
$source[77]="0415+448"  ;$ra[77]=63.98551    ;$dec[77]=+44.88046   ;
$source[78]="0416-209"  ;$ra[78]=64.01816    ;$dec[78]=-20.94097   ;
$source[79]="0418+380"  ;$ra[79]=64.58865    ;$dec[79]=+38.02661   ;
$source[80]="0422+023"  ;$ra[80]=65.71756    ;$dec[80]=+2.32414    ;
$source[81]="0423-013"  ;$ra[81]=65.81583    ;$dec[81]=-1.34251    ;
$source[82]="0423+418"  ;$ra[82]=65.98337    ;$dec[82]=+41.83408   ;
$source[83]="0424-379"  ;$ra[83]=66.17601    ;$dec[83]=-37.93910   ;
$source[84]="0424+006"  ;$ra[84]=66.19517    ;$dec[84]=+0.60175    ;
$source[85]="0428+329"  ;$ra[85]=67.02420    ;$dec[85]=+32.99778   ;
$source[86]="0428-379"  ;$ra[86]=67.16843    ;$dec[86]=-37.93877   ;
$source[87]="0433+053"  ;$ra[87]=68.29623    ;$dec[87]=+5.35433    ;
$source[88]="0440-435"  ;$ra[88]=70.07158    ;$dec[88]=-43.55239   ;
$source[89]="0442-002"  ;$ra[89]=70.66108    ;$dec[89]=+0.29539    ;
$source[90]="0446+112"  ;$ra[90]=72.28196    ;$dec[90]=+11.35794   ;
$source[91]="0449+635"  ;$ra[91]=72.34712    ;$dec[91]=+63.53595   ;
$source[92]="0453-281"  ;$ra[92]=73.31102    ;$dec[92]=-28.12703   ;
$source[93]="0455-462"  ;$ra[93]=73.96155    ;$dec[93]=-46.26630   ;
$source[94]="0457-234"  ;$ra[94]=74.26324    ;$dec[94]=-23.41445   ;
$source[95]="0457+067"  ;$ra[95]=74.28212    ;$dec[95]=+6.75201    ;
$source[96]="0501-019"  ;$ra[96]=75.30337    ;$dec[96]=-1.98729    ;
$source[97]="0502+061"  ;$ra[97]=75.56435    ;$dec[97]=+6.15208    ;
$source[98]="0502+136"  ;$ra[98]=75.63841    ;$dec[98]=+13.63637   ;
$source[99]="0502+416"  ;$ra[99]=75.65828    ;$dec[99]=+41.65537   ;
$source[100]="0505+049" ;$ra[100]=76.34660   ;$dec[100]=+4.99520   ;
$source[101]="0509+056" ;$ra[101]=77.35818   ;$dec[101]=+5.69314   ;
$source[102]="0510+180" ;$ra[102]=77.50987   ;$dec[102]=+18.01155  ;
$source[103]="0512+152" ;$ra[103]=78.17088   ;$dec[103]=+15.28985  ;
$source[104]="0522+012" ;$ra[104]=80.57278   ;$dec[104]=+1.22532   ;
$source[105]="0522-364" ;$ra[105]=80.74160   ;$dec[105]=-36.45856  ;
$source[106]="0527+035" ;$ra[106]=81.88627   ;$dec[106]=+3.52542   ;
$source[107]="0530+135" ;$ra[107]=82.73507   ;$dec[107]=+13.53198  ;
$source[108]="0532+075" ;$ra[108]=83.16249   ;$dec[108]=+7.54537   ;
$source[109]="0533+483" ;$ra[109]=83.31610   ;$dec[109]=+48.38133  ;
$source[110]="0538-440" ;$ra[110]=84.70983   ;$dec[110]=-44.08581  ;
$source[111]="0539+145" ;$ra[111]=84.92652   ;$dec[111]=+14.56265  ;
$source[112]="0539-286" ;$ra[112]=84.97617   ;$dec[112]=-28.66554  ;
$source[113]="0541+474" ;$ra[113]=85.45518   ;$dec[113]=+47.48544  ;
$source[114]="0542+498" ;$ra[114]=85.65057   ;$dec[114]=+49.85200  ;
$source[115]="0555+398" ;$ra[115]=88.87835   ;$dec[115]=+39.81365  ;
$source[116]="0605+405" ;$ra[116]=91.46190   ;$dec[116]=+40.50225  ;
$source[117]="0607-085" ;$ra[117]=91.99874   ;$dec[117]=-8.58054   ;
$source[118]="0608-223" ;$ra[118]=92.24869   ;$dec[118]=-22.33915   ;
$source[119]="0609-157" ;$ra[119]=92.42062   ;$dec[119]=-15.71129   ;
$source[120]="0625+146" ;$ra[120]=96.44132   ;$dec[120]=+14.67209   ;
$source[121]="0629-199" ;$ra[121]=97.34900   ;$dec[121]=-19.98881   ;
$source[122]="0646+448" ;$ra[122]=101.63344   ;$dec[122]=+44.85460  ;
$source[123]="0648-307" ;$ra[123]=102.05873   ;$dec[123]=-30.73879  ;
$source[124]="0650-166" ;$ra[124]=102.60242   ;$dec[124]=-16.62770  ;
$source[125]="0710+475" ;$ra[125]=107.69210   ;$dec[125]=+47.53642  ;
$source[126]="0717+456" ;$ra[126]=109.46605   ;$dec[126]=+45.63423  ;
$source[127]="0721+713" ;$ra[127]=110.47270   ;$dec[127]=+71.34343  ;
$source[128]="0725-009" ;$ra[128]=111.46100   ;$dec[128]=+0.91570   ;
$source[129]="0730-116" ;$ra[129]=112.57963   ;$dec[129]=-11.68683  ;
$source[130]="0733+503" ;$ra[130]=113.46883   ;$dec[130]=+50.36918  ;
$source[131]="0738+177" ;$ra[131]=114.53080   ;$dec[131]=+17.70527  ;
$source[132]="0738-064" ;$ra[132]=114.73823   ;$dec[132]=-6.44946   ;
$source[133]="0739+016" ;$ra[133]=114.82514   ;$dec[133]=+1.61794   ;
$source[134]="0741+312" ;$ra[134]=115.29459   ;$dec[134]=+31.20006  ;
$source[135]="0745+317" ;$ra[135]=116.42363   ;$dec[135]=+31.71572  ;
$source[136]="0747+766" ;$ra[136]=116.81086   ;$dec[136]=+76.65479  ;
$source[137]="0748+240" ;$ra[137]=117.15045   ;$dec[137]=+24.00669  ;
$source[138]="0750+482" ;$ra[138]=117.58515   ;$dec[138]=+48.24821  ;
$source[139]="0750+125" ;$ra[139]=117.71685   ;$dec[139]=+12.51800  ;
$source[140]="0753+538" ;$ra[140]=118.25577   ;$dec[140]=+53.88323  ;
$source[141]="0757+099" ;$ra[141]=119.27767   ;$dec[141]=+9.94301   ;
$source[142]="0802+181" ;$ra[142]=120.70013   ;$dec[142]=+18.16368  ;
$source[143]="0804-278" ;$ra[143]=121.21437   ;$dec[143]=-27.81981  ;
$source[144]="0806-268" ;$ra[144]=121.55301   ;$dec[144]=-26.87591  ;
$source[145]="0808-078" ;$ra[145]=122.06473   ;$dec[145]=-7.85274   ;
$source[146]="0808+498" ;$ra[146]=122.16527   ;$dec[146]=+49.84348  ;
$source[147]="0811+017" ;$ra[147]=122.86127   ;$dec[147]=+1.78117   ;
$source[148]="0818+423" ;$ra[148]=124.56666   ;$dec[148]=+42.37928  ;
$source[149]="0823+223" ;$ra[149]=125.85316   ;$dec[149]=+22.38425  ;
$source[150]="0824+558" ;$ra[150]=126.19681   ;$dec[150]=+55.87851  ;
$source[151]="0824+392" ;$ra[151]=126.23118   ;$dec[151]=+39.27830  ;
$source[152]="0825+031" ;$ra[152]=126.45974   ;$dec[152]=+3.15681   ;
$source[153]="0826-225" ;$ra[153]=126.50655   ;$dec[153]=-22.50755  ;
$source[154]="0830+241" ;$ra[154]=127.71702   ;$dec[154]=+24.18328  ;
$source[155]="0831+044" ;$ra[155]=127.95365   ;$dec[155]=+4.49419   ;
$source[156]="0836-202" ;$ra[156]=129.16339   ;$dec[156]=-20.28319  ;
$source[157]="0839+033" ;$ra[157]=129.95498   ;$dec[157]=+3.33162   ;
$source[158]="0840+132" ;$ra[158]=130.19830   ;$dec[158]=+13.20654  ;
$source[159]="0841+708" ;$ra[159]=130.35152   ;$dec[159]=+70.89504  ;
$source[160]="0854+201" ;$ra[160]=133.70364   ;$dec[160]=+20.10851  ;
$source[161]="0902-142" ;$ra[161]=135.57012   ;$dec[161]=-14.25857  ;
$source[162]="0903+468" ;$ra[162]=135.76662   ;$dec[162]=+46.85114  ;
$source[163]="0914+027" ;$ra[163]=138.65797   ;$dec[163]=+2.76645   ;
$source[164]="0920+446" ;$ra[164]=140.24357   ;$dec[164]=+44.69832  ;
$source[165]="0921+622" ;$ra[165]=140.40096   ;$dec[165]=+62.26449  ;
$source[166]="0925+003" ;$ra[166]=141.28256   ;$dec[166]=+0.32053   ;
$source[167]="0927+390" ;$ra[167]=141.76255   ;$dec[167]=+39.03912  ;
$source[168]="0927-205" ;$ra[168]=141.96593   ;$dec[168]=-20.58089  ;
$source[169]="0937+501" ;$ra[169]=144.30137   ;$dec[169]=+50.14779  ;
$source[170]="0943-083" ;$ra[170]=145.90393   ;$dec[170]=-8.32522   ;
$source[171]="0948+406" ;$ra[171]=147.23057   ;$dec[171]=+40.66238  ;
$source[172]="0956+252" ;$ra[172]=149.20781   ;$dec[172]=+25.25445  ;
$source[173]="0957+553" ;$ra[173]=149.40910   ;$dec[173]=+55.38271  ;
$source[174]="0958+474" ;$ra[174]=149.58196   ;$dec[174]=+47.41884  ;
$source[175]="0958+655" ;$ra[175]=149.69685   ;$dec[175]=+65.56522  ;
$source[176]="1001-446" ;$ra[176]=150.49961   ;$dec[176]=-44.63350  ;
$source[177]="1010+828" ;$ra[177]=152.56576   ;$dec[177]=+82.83732  ;
$source[178]="1014+230" ;$ra[178]=153.69610   ;$dec[178]=+23.02126  ;
$source[179]="1018+357" ;$ra[179]=154.54578   ;$dec[179]=+35.71095  ;
$source[180]="1035-201" ;$ra[180]=158.75898   ;$dec[180]=-20.19287  ;
$source[181]="1037-295" ;$ra[181]=159.31700   ;$dec[181]=-29.56744  ;
$source[182]="1039-156" ;$ra[182]=159.77793   ;$dec[182]=-15.68519  ;
$source[183]="1041+061" ;$ra[183]=160.32151   ;$dec[183]=+6.17136   ;
$source[184]="1043+241" ;$ra[184]=160.78764   ;$dec[184]=+24.14317  ;
$source[185]="1044+809" ;$ra[185]=161.09609   ;$dec[185]=+80.91095  ;
$source[186]="1048-191" ;$ra[186]=162.02758   ;$dec[186]=-19.15992  ;
$source[187]="1048+717" ;$ra[187]=162.11508   ;$dec[187]=+71.72664  ;
$source[188]="1051+213" ;$ra[188]=162.95328   ;$dec[188]=+21.33119  ;
$source[189]="1057-245" ;$ra[189]=164.48087   ;$dec[189]=-24.56357  ;
$source[190]="1058+812" ;$ra[190]=164.54806   ;$dec[190]=+81.24240  ;
$source[191]="1058+015" ;$ra[191]=164.62335   ;$dec[191]=+1.56633   ;
$source[192]="1102+279" ;$ra[192]=165.55953   ;$dec[192]=+27.95241  ;
$source[193]="1103+302" ;$ra[193]=165.80542   ;$dec[193]=+30.24519  ;
$source[194]="1103+220" ;$ra[194]=165.84611   ;$dec[194]=+22.06047  ;
$source[195]="1104+382" ;$ra[195]=166.11380   ;$dec[195]=+38.20883  ;
$source[196]="1107+164" ;$ra[196]=166.81269   ;$dec[196]=+16.46729  ;
$source[197]="1111+199" ;$ra[197]=167.83360   ;$dec[197]=+19.92666  ;
$source[198]="1112-219" ;$ra[198]=168.20770   ;$dec[198]=-21.97481  ;
$source[199]="1118+125" ;$ra[199]=169.73875   ;$dec[199]=+12.57825  ;
$source[200]="1120-251" ;$ra[200]=170.03800   ;$dec[200]=-25.13544  ;
$source[201]="1120+143" ;$ra[201]=170.11586   ;$dec[201]=+14.34860  ;
$source[202]="1122+180" ;$ra[202]=170.62379   ;$dec[202]=+18.09065  ;
$source[203]="1127-189" ;$ra[203]=171.76830   ;$dec[203]=-18.95484  ;
$source[204]="1130-148" ;$ra[204]=172.52938   ;$dec[204]=-14.82427  ;
$source[205]="1145-228" ;$ra[205]=176.34186   ;$dec[205]=-22.84203  ;
$source[206]="1146-289" ;$ra[206]=176.60911   ;$dec[206]=-28.98847  ;
$source[207]="1146+539" ;$ra[207]=176.68418   ;$dec[207]=+53.94530  ;
$source[208]="1146+399" ;$ra[208]=176.74290   ;$dec[208]=+39.97619  ;
$source[209]="1147-382" ;$ra[209]=176.75571   ;$dec[209]=-38.20306  ;
$source[210]="1153+809" ;$ra[210]=178.30207   ;$dec[210]=+80.97476  ;
$source[211]="1153+495" ;$ra[211]=178.35194   ;$dec[211]=+49.51911  ;
$source[212]="1159-224" ;$ra[212]=179.79694   ;$dec[212]=-22.47691  ;
$source[213]="1159+292" ;$ra[213]=179.88264   ;$dec[213]=+29.24550  ;
$source[214]="1159-218" ;$ra[214]=179.96627   ;$dec[214]=-21.81491  ;
$source[215]="1203+480" ;$ra[215]=180.87439   ;$dec[215]=+48.05378  ;
$source[216]="1205-265" ;$ra[216]=181.38838   ;$dec[216]=-26.56790  ;
$source[217]="1207+279" ;$ra[217]=181.86625   ;$dec[217]=+27.91634  ;
$source[218]="1209-241" ;$ra[218]=182.26018   ;$dec[218]=-24.10576  ;
$source[219]="1215-175" ;$ra[219]=183.94480   ;$dec[219]=-17.52927  ;
$source[220]="1218-460" ;$ra[220]=184.52604   ;$dec[220]=-46.00805  ;
$source[221]="1222+042" ;$ra[221]=185.59395   ;$dec[221]=+4.22104   ;
$source[222]="1224+213" ;$ra[222]=186.22690   ;$dec[222]=+21.37955  ;
$source[223]="1227+365" ;$ra[223]=186.99468   ;$dec[223]=+36.58661  ;
$source[224]="1229+020" ;$ra[224]=187.27790   ;$dec[224]=+2.05238   ;
$source[225]="1230+123" ;$ra[225]=187.70590   ;$dec[225]=+12.39112  ;
$source[226]="1239+075" ;$ra[226]=189.85245   ;$dec[226]=+7.50477   ;
$source[227]="1244+408" ;$ra[227]=191.20494   ;$dec[227]=+40.80170  ;
$source[228]="1246-075" ;$ra[228]=191.51763   ;$dec[228]=-7.51293   ;
$source[229]="1246-257" ;$ra[229]=191.69500   ;$dec[229]=-25.79702  ;
$source[230]="1248-199" ;$ra[230]=192.09957   ;$dec[230]=-19.98849  ;
$source[231]="1254+116" ;$ra[231]=193.65940   ;$dec[231]=+11.68497  ;
$source[232]="1256-057" ;$ra[232]=194.04650   ;$dec[232]=-5.78931   ;
$source[233]="1258-223" ;$ra[233]=194.72699   ;$dec[233]=-22.32531  ;
$source[234]="1305-105" ;$ra[234]=196.38756   ;$dec[234]=-10.55539  ;
$source[235]="1309+119" ;$ra[235]=197.39138   ;$dec[235]=+11.90682  ;
$source[236]="1310+323" ;$ra[236]=197.61943   ;$dec[236]=+32.34549  ;
$source[237]="1316-336" ;$ra[237]=199.03327   ;$dec[237]=-33.64977  ;
$source[238]="1325-430" ;$ra[238]=201.36506   ;$dec[238]=-43.01911  ;
$source[239]="1327+221" ;$ra[239]=201.75358   ;$dec[239]=+22.18060  ;
$source[240]="1329+319" ;$ra[240]=202.47027   ;$dec[240]=+31.90306  ;
$source[241]="1331+305" ;$ra[241]=202.78450   ;$dec[241]=+30.50915  ;
$source[242]="1337-129" ;$ra[242]=204.41576   ;$dec[242]=-12.95685  ;
$source[243]="1357+193" ;$ra[243]=209.26848   ;$dec[243]=+18.68128  ;
$source[244]="1357+193" ;$ra[244]=209.26848   ;$dec[244]=+19.31871  ;
$source[245]="1357-154" ;$ra[245]=209.29685   ;$dec[245]=-15.45799  ;
$source[246]="1357+767" ;$ra[246]=209.48071   ;$dec[246]=+76.72251  ;
$source[247]="1408-078" ;$ra[247]=212.23533   ;$dec[247]=-7.87407   ;
$source[248]="1415+133" ;$ra[248]=213.99507   ;$dec[248]=+13.33992  ;
$source[249]="1416+347" ;$ra[249]=214.01744   ;$dec[249]=+34.74345  ;
$source[250]="1419+543" ;$ra[250]=214.94415   ;$dec[250]=+54.38744  ;
$source[251]="1419+383" ;$ra[251]=214.94422   ;$dec[251]=+38.36346  ;
$source[252]="1424-492" ;$ra[252]=216.13450   ;$dec[252]=-49.23036  ;
$source[253]="1427-421" ;$ra[253]=216.98457   ;$dec[253]=-42.10539  ;
$source[254]="1433-158" ;$ra[254]=218.33941   ;$dec[254]=-15.81241  ;
$source[255]="1439-155" ;$ra[255]=219.98696   ;$dec[255]=-15.53070  ;
$source[256]="1446+173" ;$ra[256]=221.64727   ;$dec[256]=+17.35209  ;
$source[257]="1454-377" ;$ra[257]=223.61420   ;$dec[257]=-37.79254  ;
$source[258]="1454-402" ;$ra[258]=223.63713   ;$dec[258]=-40.20903  ;
$source[259]="1458+042" ;$ra[259]=224.74731   ;$dec[259]=+4.27050   ;
$source[260]="1459+716" ;$ra[260]=224.78160   ;$dec[260]=+71.67218  ;
$source[261]="1504+104" ;$ra[261]=226.10408   ;$dec[261]=+10.49422  ;
$source[262]="1505+034" ;$ra[262]=226.27698   ;$dec[262]=+3.441892  ;
$source[263]="1506+426" ;$ra[263]=226.72100   ;$dec[263]=+42.65640  ;
$source[264]="1507-168" ;$ra[264]=226.76994   ;$dec[264]=-16.87507  ;
$source[265]="1510-057" ;$ra[265]=227.72329   ;$dec[265]=-5.71872   ;
$source[266]="1512-090" ;$ra[266]=228.21055   ;$dec[266]=-9.09995   ;
$source[267]="1513-102" ;$ra[267]=228.43705   ;$dec[267]=-10.20007  ;
$source[268]="1513-212" ;$ra[268]=228.48737   ;$dec[268]=-21.24930  ;
$source[269]="1516+002" ;$ra[269]=229.16757   ;$dec[269]=+0.25052   ;
$source[270]="1517-243" ;$ra[270]=229.42422   ;$dec[270]=-24.37207  ;
$source[271]="1522-275" ;$ra[271]=230.65698   ;$dec[271]=-27.50299  ;
$source[272]="1538+003" ;$ra[272]=234.56647   ;$dec[272]=+0.31814   ;
$source[273]="1540+147" ;$ra[273]=235.20621   ;$dec[273]=+14.79607  ;
$source[274]="1549+506" ;$ra[274]=237.32278   ;$dec[274]=+50.63494  ;
$source[275]="1549+026" ;$ra[275]=237.37265   ;$dec[275]=+2.61698   ;
$source[276]="1550+054" ;$ra[276]=237.64695   ;$dec[276]=+5.45290   ;
$source[277]="1553+129" ;$ra[277]=238.38624   ;$dec[277]=+12.94769  ;
$source[278]="1557-000" ;$ra[278]=239.46430   ;$dec[278]=-0.03067   ;
$source[279]="1604-446" ;$ra[279]=241.12926   ;$dec[279]=-44.69219  ;
$source[280]="1608+104" ;$ra[280]=242.19251   ;$dec[280]=+10.48549  ;
$source[281]="1613+342" ;$ra[281]=243.42110   ;$dec[281]=+34.21330  ;
$source[282]="1617+027" ;$ra[282]=244.45795   ;$dec[282]=+2.77864   ;
$source[283]="1619+227" ;$ra[283]=244.81176   ;$dec[283]=+22.79662  ;
$source[284]="1625-254" ;$ra[284]=246.44538   ;$dec[284]=-25.46064  ;
$source[285]="1626-298" ;$ra[285]=246.52508   ;$dec[285]=-29.85749  ;
$source[286]="1632+825" ;$ra[286]=248.13320   ;$dec[286]=+82.53788  ;
$source[287]="1635+381" ;$ra[287]=248.81455   ;$dec[287]=+38.13458  ;
$source[288]="1637+472" ;$ra[288]=249.43804   ;$dec[288]=+47.29273  ;
$source[289]="1638+573" ;$ra[289]=249.55606   ;$dec[289]=+57.33999  ;
$source[290]="1640+397" ;$ra[290]=250.12347   ;$dec[290]=+39.77945  ;
$source[291]="1642+689" ;$ra[291]=250.53270   ;$dec[291]=+68.94437  ;
$source[292]="1806+698" ;$ra[292]=271.71117   ;$dec[292]=+69.82447  ;
$source[293]="1642+398" ;$ra[293]=250.74500   ;$dec[293]=+39.81027  ;
$source[294]="1653+397" ;$ra[294]=253.46757   ;$dec[294]=+39.76016  ;
$source[295]="1658+347" ;$ra[295]=254.50591   ;$dec[295]=+34.72455  ;
$source[296]="1658+476" ;$ra[296]=254.51158   ;$dec[296]=+47.63034  ;
$source[297]="1658+076" ;$ra[297]=254.53754   ;$dec[297]=+7.69098   ;
$source[298]="1700-261" ;$ra[298]=255.22147   ;$dec[298]=-26.18103  ;
$source[299]="1707+018" ;$ra[299]=256.89339   ;$dec[299]=+1.81269   ;
$source[300]="1716+686" ;$ra[300]=259.05807   ;$dec[300]=+68.61076  ;
$source[301]="1719+177" ;$ra[301]=259.80436   ;$dec[301]=+17.75178  ;
$source[302]="1727+455" ;$ra[302]=261.86521   ;$dec[302]=+45.51103  ;
$source[303]="1728+044" ;$ra[303]=262.10397   ;$dec[303]=+4.45136   ;
$source[304]="1733-130"	;$ra[304]=263.26127   ;$dec[304]=-13.08043  ;
$source[305]="1734+389" ;$ra[305]=263.58574   ;$dec[305]=+38.96428  ;
$source[306]="1734+094" ;$ra[306]=263.74323   ;$dec[306]=+9.44951   ;
$source[307]="1737+063" ;$ra[307]=264.30720   ;$dec[307]=+6.35098   ;
$source[308]="1739+499" ;$ra[308]=264.86412   ;$dec[308]=+49.91760  ;
$source[309]="1740+521" ;$ra[309]=265.15407   ;$dec[309]=+52.19539  ;
$source[310]="1743-038" ;$ra[310]=265.99523   ;$dec[310]=-3.83461   ;
$source[311]="1744-312" ;$ra[311]=266.09826   ;$dec[311]=-31.27666  ;
$source[312]="1745-290" ;$ra[312]=266.41682   ;$dec[312]=-29.00779  ;
$source[313]="1751+096" ;$ra[313]=267.88674   ;$dec[313]=+9.65020   ;
$source[314]="1753+288" ;$ra[314]=268.42697   ;$dec[314]=+28.80137  ;
$source[315]="1759+237" ;$ra[315]=269.75149   ;$dec[315]=+23.72970  ;
$source[316]="1800+388" ;$ra[316]=270.10318   ;$dec[316]=+38.80852  ;
$source[317]="1803+784" ;$ra[317]=270.19035   ;$dec[317]=+78.46778  ;
$source[318]="1801+440" ;$ra[318]=270.38464   ;$dec[318]=+44.07275  ;
$source[319]="1802-396" ;$ra[319]=270.67778   ;$dec[319]=-39.66888  ;
$source[320]="1807+698" ;$ra[320]=271.71117   ;$dec[320]=+69.82447  ;
$source[321]="1812-068" ;$ra[321]=273.21225   ;$dec[321]=-6.80662   ;
$source[322]="1821+397" ;$ra[322]=275.49875   ;$dec[322]=+39.76657  ;
$source[323]="1824+568" ;$ra[323]=276.02945   ;$dec[323]=+56.85041  ;
$source[324]="1829+487" ;$ra[324]=277.38240   ;$dec[324]=+48.74615  ;
$source[325]="1827+062" ;$ra[325]=277.52475   ;$dec[325]=+6.32109   ;
$source[326]="1833-210" ;$ra[326]=278.41631   ;$dec[326]=-21.06112  ;
$source[327]="1842+681" ;$ra[327]=280.64017   ;$dec[327]=+68.15700  ;
$source[328]="1845+356" ;$ra[328]=281.39628   ;$dec[328]=+35.68797  ;
$source[329]="1848+323" ;$ra[329]=282.09203   ;$dec[329]=+32.31738  ;
$source[330]="1848+327" ;$ra[330]=282.14317   ;$dec[330]=+32.73337  ;
$source[331]="1849+670" ;$ra[331]=282.31696   ;$dec[331]=+67.09491  ;
$source[332]="1902+319" ;$ra[332]=285.73310   ;$dec[332]=+31.99491  ;
$source[333]="1911-201" ;$ra[333]=287.79022   ;$dec[333]=-20.11530  ;
$source[334]="1923-210" ;$ra[334]=290.88412   ;$dec[334]=-21.07592  ;
$source[335]="1924+156" ;$ra[335]=291.16439   ;$dec[335]=+15.67887  ;
$source[336]="1924-292" ;$ra[336]=291.21273   ;$dec[336]=-29.24170  ;
$source[337]="1925+211" ;$ra[337]=291.49835   ;$dec[337]=+21.10726  ;
$source[338]="1927+612" ;$ra[338]=291.87684   ;$dec[338]=+61.29246  ;
$source[339]="1928+738" ;$ra[339]=291.95206   ;$dec[339]=+73.96710  ;
$source[340]="1937-399" ;$ra[340]=294.31757   ;$dec[340]=-39.96709  ;
$source[341]="1955+515" ;$ra[341]=298.92807   ;$dec[341]=+51.53015  ;
$source[342]="1957-387" ;$ra[342]=299.49924   ;$dec[342]=-38.75176  ;
$source[343]="2000-178" ;$ra[343]=300.23787   ;$dec[343]=-17.81602  ;
$source[344]="2007+777" ;$ra[344]=301.37915   ;$dec[344]=+77.87867  ;
$source[345]="2007+404" ;$ra[345]=301.93727   ;$dec[345]=+40.49683  ;
$source[346]="2009+724" ;$ra[346]=302.46792   ;$dec[346]=+72.48871  ;
$source[347]="2011-157" ;$ra[347]=302.81546   ;$dec[347]=-15.77784  ;
$source[348]="2012+464" ;$ra[348]=303.02348   ;$dec[348]=+46.48216  ;
$source[349]="2015+371" ;$ra[349]=303.86972   ;$dec[349]=+37.18319  ;
$source[350]="2016+165" ;$ra[350]=304.05775   ;$dec[350]=+16.54281  ;
$source[351]="2023+318" ;$ra[351]=305.82923   ;$dec[351]=+31.88397  ;
$source[352]="2025+032" ;$ra[352]=306.29013   ;$dec[352]=+3.27902   ;
$source[353]="2025+337" ;$ra[353]=306.29517   ;$dec[353]=+33.71672  ;
$source[354]="2035+109" ;$ra[354]=308.84305   ;$dec[354]=+10.93521  ;
$source[355]="2038+513" ;$ra[355]=309.65430   ;$dec[355]=+51.32018  ;
$source[356]="2047-166" ;$ra[356]=311.83194   ;$dec[356]=-16.65162  ;
$source[357]="2049+100" ;$ra[357]=312.44110   ;$dec[357]=+10.05398  ;
$source[358]="2050+041" ;$ra[358]=312.52600   ;$dec[358]=+4.13024   ;
$source[359]="2052+365" ;$ra[359]=313.21689   ;$dec[359]=+36.59313  ;
$source[360]="2056-472" ;$ra[360]=314.06833   ;$dec[360]=-47.24661  ;
$source[361]="2057-375" ;$ra[361]=314.42334   ;$dec[361]=-37.56749  ;
$source[362]="2101-295n";$ra[362]=315.25691   ;$dec[362]=-29.55773  ;
$source[363]="2101+036" ;$ra[363]=315.41180   ;$dec[363]=+3.69203   ;
$source[364]="2109+355" ;$ra[364]=317.38282   ;$dec[364]=+35.54933  ;
$source[365]="2123+055" ;$ra[365]=320.93548   ;$dec[365]=+5.58947   ;
$source[366]="2129-183n";$ra[366]=322.33924   ;$dec[366]=-18.35633  ;
$source[367]="2131-121" ;$ra[367]=322.89692   ;$dec[367]=-12.11799  ;
$source[368]="2134-018" ;$ra[368]=323.54295   ;$dec[368]=-1.88812   ;
$source[369]="2136+006" ;$ra[369]=324.16077   ;$dec[369]=+0.69839   ;
$source[370]="2138-246n";$ra[370]=324.65492   ;$dec[370]=-24.66512  ;
$source[371]="2139+143" ;$ra[371]=324.75545   ;$dec[371]=+14.39333  ;
$source[372]="2142-046n";$ra[372]=325.65375   ;$dec[372]=-4.62875   ;
$source[373]="2147+094" ;$ra[373]=326.79234   ;$dec[373]=+9.49629   ;
$source[374]="2148+069" ;$ra[374]=327.02274   ;$dec[374]=+6.96072   ;
$source[375]="2151+071n";$ra[375]=327.88095   ;$dec[375]=+7.15743   ;
$source[376]="2152+175" ;$ra[376]=328.10341   ;$dec[376]=+17.57716  ;
$source[377]="2158-150" ;$ra[377]=329.52617   ;$dec[377]=-15.01925  ;
$source[378]="2202+422"	;$ra[378]=330.68037   ;$dec[378]=+42.27777  ;
$source[379]="2203+317" ;$ra[379]=330.81240   ;$dec[379]=+31.76063  ;
$source[380]="2203+174" ;$ra[380]=330.86206   ;$dec[380]=+17.43006  ;
$source[381]="2206-185" ;$ra[381]=331.54340   ;$dec[381]=-18.59409  ;
$source[382]="2213-254" ;$ra[382]=333.26040   ;$dec[382]=-25.49168  ;
$source[383]="2217+243" ;$ra[383]=334.25342   ;$dec[383]=+24.36277  ;
$source[384]="2218-035" ;$ra[384]=334.71682   ;$dec[384]=-3.59357   ;
$source[385]="2225-049" ;$ra[385]=336.44690   ;$dec[385]=-4.95038   ;
$source[386]="2229-085" ;$ra[386]=337.41701   ;$dec[386]=-8.54845   ;
$source[387]="2232+117" ;$ra[387]=338.15170   ;$dec[387]=+11.73080  ;
$source[388]="2236+284" ;$ra[388]=339.09362   ;$dec[388]=+28.48261  ;
$source[389]="2243-257" ;$ra[389]=340.86003   ;$dec[389]=-25.74185  ;
$source[390]="2246-121" ;$ra[390]=341.57596   ;$dec[390]=-12.11424  ;
$source[391]="2247+031" ;$ra[391]=341.99450   ;$dec[391]=+3.17842   ;
$source[392]="2248-325" ;$ra[392]=342.16119   ;$dec[392]=-32.59782  ;
$source[393]="2253+161" ;$ra[393]=343.49060   ;$dec[393]=+16.14821  ;
$source[394]="2258-279" ;$ra[394]=344.52484   ;$dec[394]=-27.97257  ;
$source[395]="2301+374" ;$ra[395]=345.36557   ;$dec[395]=+37.44701  ;
$source[396]="2302-373" ;$ra[396]=345.59954   ;$dec[396]=-37.30190  ;
$source[397]="2307+148" ;$ra[397]=346.89152   ;$dec[397]=+14.83844  ;
$source[398]="2311+344" ;$ra[398]=347.77220   ;$dec[398]=+34.41969  ;
$source[399]="2320+052" ;$ra[399]=350.18690   ;$dec[399]=+5.23054   ;
$source[400]="2321+275" ;$ra[400]=350.49942   ;$dec[400]=+27.54623  ;
$source[401]="2323-032" ;$ra[401]=350.88314   ;$dec[401]=-3.28472   ;
$source[402]="2327+096" ;$ra[402]=351.88992   ;$dec[402]=+9.66929   ;
$source[403]="2331-159" ;$ra[403]=352.91105   ;$dec[403]=-15.94916  ;
$source[404]="2333-237" ;$ra[404]=353.48015   ;$dec[404]=-23.72796  ;
$source[405]="2334+076" ;$ra[405]=353.55345   ;$dec[405]=+7.60765   ;
$source[406]="2337-025" ;$ra[406]=354.48891   ;$dec[406]=-2.51600   ;
$source[407]="2348-165" ;$ra[407]=357.01086   ;$dec[407]=-16.52000  ;
$source[408]="2354+458" ;$ra[408]=358.59033   ;$dec[408]=+45.88451  ;
$source[409]="2358-103" ;$ra[409]=359.54534   ;$dec[409]=-10.33572  ;
$source[410]="0826-373" ;$ra[410]=127.01992   ;$dec[410]=-37.51841  ;
$source[411]="0747-331" ;$ra[411]=116.83203   ;$dec[411]=-33.17976  ;
$source[412]="1713-269" ;$ra[412]=258.38032   ;$dec[412]=-26.98126  ;




#-----------------------------------------------------#
#---- Below this line observers should not modify ----#
# Constants
$pi=atan2(1,1)*4.0;
$rad2deg=180.0/$pi;
$deg2rad=1./$rad2deg;
$LAT=19.82420526388;  # Lattitude of the SMA (Degree)
$LAT=$LAT*$deg2rad;

$scan=7;        # How many scans
$scancal=7;        # How many scans on the calibrator quasar
$inttime=30.0;   # correlator integration time in seconds
$nflux=20;       # Number of scans for Flux Calibrators
$ELULIMIT=86.10; # Upper Elevation Limit of the SMA, Be careful!!!!!
$ELLLIMIT=23.0;  # Lower Elevation Limit of the SMA
$SUNANGLE=25.0;  # Sun avoidance angle (degrees)
@sma = ();
@priority = (0) x $#source;
@el = ();
@ha = ();

$nicname="SMA";

use Getopt::Long;
$Getopt::Long::autoabbrev=1;

GetOptions('restart','calibrator=s'=>\$calib,'late','early','help','subcompact');

if ($opt_help) {
    &Usage; die "\n";
}

if($calib eq '')
{
    die "Plase specify a calibrator using the -c command\n";
}


$check = 0;
for($c = 0; $c <= $#cal; $c++)
{
    if($calib eq $cal[$c])
    {
	$check = 1;
    }
}
if($check == 0)
{
    die "Please specify a bright calibrator.\n";
}
for ($i=0;$i<=$#source;$i++) {
    $el[$i]=0.0;
    $ha[$i]=10.0;
    $ra[$i]=$ra[$i]*$deg2rad;
    $dec[$i]=$dec[$i]*$deg2rad;
}
if($opt_late && $opt_early)
{
    die "Please choose ONE of the following: -l, -e, or neither.\n";
}
if($opt_early)
{
    $HALLIMIT=0.0;
    $HAULIMIT=4.0;
}
if($opt_late)
{
    $HALLIMIT=-4.0;
    $HAULIMIT=0.0;
}
if($opt_subcompact)
{
    $ELLLIMIT=34.0;
}
if($opt_help && $opt_subcompact && $opt_restart) #this will get rid of the only used once message.
{
    print "Happy Birthday!\n";  #this shouldn't ever execute
}

##################
# Initialization #
################## 
$mypid=$$;            # check process id
$myname = ${0};
command("project -r -i $mypid -f $myname");
print "The process ID of this $myname script is $mypid\n";
checkANT();         # check antennas to be used
command("radio");   # note: command is also subroutine.
command("stopChopping");
command("integrate -t $inttime");
print "----- initialization done -----\n";
print "$nicname starts flux observations!!\n";
print "Good Luck, $nicname!!\n";


#find the currently active receiver
for($d = 0; $d <= $#sma; $d++)
{
    @frequency = `tune -a $sma[$d] -c active`;
#    $freq = substr $frequency[3], 20, 1;
    $freq = substr $frequency[1], 20, 1;
    if($freq eq '0')
    {
	$freq = '1mm';
    }
    elsif($freq eq '2')
    {	
	$freq = '850';
    }
    else
    {
	$freq = '';
    }
    if($freq ne '')
    {	
	last;
    }
}
print "The current wavelength is: $freq.\n";
print "\n\n";
print "Fetching calibrator list...\n";

print "Collecting appropriate sources from calibrator list...\n";


@sourceList = getSources();

foreach $gal (@sourceList)
{
    for($r = 0; $r <= $#source; $r++)
    {
	if($gal eq $source[$r])
	{
	    $priority[$r] = -1;
	    last;         
	}
    }
}

foreach $qso (@highpriority)
{
    for($u = 0; $u <= $#source; $u++)
    {
	if($qso eq $source[$u])
	{
	    $priority[$u] = 1;
	    last;         
	}
    }
}

if($calib =~ /3c84/)
{
    $j2000 = "0319+415";
}
if($calib =~ /3c111/)
{
    $j2000 = "0418+380";
}
if($calib =~ /3c273/)
{
    $j2000 = "1229+020";
}
if($calib =~ /3c279/)
{
    $j2000 = "1256-057";
}
if($calib =~ /3c454.3/)
{
    $j2000 = "2253+161";
}

for($g = 0; $g <= $#source; $g++)
{
    if($j2000 eq $source[$g])
    {
	$priority[$g] = -1;
	last;
    }
}

print "Upper HA: $HAULIMIT\n";
print "Lower HA: $HALLIMIT\n";

#########################################
# Check the Elevation of the Calibrator #
#########################################
getLST();
calcEL();
checkcalEL();


#####################################
# Start with the flux calibration   #
# Uranus, or Callisto, or Ganymede  #
#####################################

if($opt_restart)
{
    print "Skipping flux calibrators\n";
    print "Checking for a previous data file...\n";  #finds a flux file from the current day and adds the sources to the 
#    $dir = "/sma/rtData/flux/mir_data/*";           #this directory isn't visable on hal
    $dir = "/data/flux/mir_data/*";
    $day = (gmtime time)[3];
    $month = (gmtime time)[4];
    $year = (gmtime time)[5];
    $year -= 100;
    $month++;
    if($day < 10)
    {
	$day = '0' . $day;
    }
    if($month < 10)
    {
	$month = '0' . $month;
    }
    $date = $year . $month . $day;
    $fluxfile = '';
    @allfile = ();
    @allfile = glob("$dir");
    for($g = 0; $g <= $#allfile; $g++)
    {
	$filedate = substr $allfile[$g], 20, 6;
	if($filedate == $date)
	{
	    $fluxfile = $allfile[$g];
	}
    }
    if($fluxfile ne '')
    {
	print "File found, reading...\n";
	$fluxfile = $fluxfile . "/plot_me_*";
	$filename = glob("$fluxfile");
	$count = 0;
	$num = 0;
	@stuff = ();
	@list = ();       #the source list for each file
	open(LOG, "<$filename") or die "open failed";
	$line = $_;
	@stuff = split(" ", $line);
	$sources = $stuff[0];
	while(<LOG>)  
	{
#	print "in the while\n";
	    if($stuff[0] ne $sources)
	    {
		if($count > 5)
		{
		    $list[$num] = $sources;
		    $num++;
		}
		$sources = $stuff[0];
		$count = 0;
	    }
	    if($stuff[8] == 1)
	    {
		$count++;
	    }
#	print "$The count for $source is $count\n";
	    $line = $_;
	    @stuff = split(" ", $line);
#	print "The new source name is: $stuff[0]\n";
	}
	if($count > 5)
	{
	    $list[$num] = $sources;
	    $num++;
	}
	close(LOG);
	foreach $sour (@list)
	{
	    for($t = 0; $t <= $#source; $t++)
	    {
		if($sour eq $source[$t])
		{
		    $priority[$t] = -1;
		    last;
		}
	    }
	}
    }
    else
    {
	print "Nothing found.\n";
    }
}
else
{
    print "Start with Uranus and/or Jovian Moons if it is available .....\n";
    
# Uranus
    $sourceCoordinates=`lookup -s uranus`;
    chomp($sourceCoordinates);
    ($sourceAzDegrees,$sourceElDegrees,$sunDistance)=split(' ',$sourceCoordinates);
    if ($ELLLIMIT<$sourceElDegrees && $sourceElDegrees<$ELULIMIT && $sunDistance>$SUNANGLE) {
	print "Uranus is available, and will be observed right now.\n";
	command("observe -s uranus");  
	command("sleep 5");
	command("tsys");
	command("integrate -s $nflux -t $inttime -w");
#   command("integrate -s 0 -t $inttime -w");
    }
    else {
	print "Uranus is not available now.\n";
    }
    
# Neptune
    $sourceCoordinates=`lookup -s neptune`;
    chomp($sourceCoordinates);
    ($sourceAzDegrees,$sourceElDegrees,$sunDistance)=split(' ',$sourceCoordinates);
    if ($ELLLIMIT<$sourceElDegrees && $sourceElDegrees<$ELULIMIT && $sunDistance>$SUNANGLE) {
	print "Neptune is available, and will be observed right now.\n";
	command("observe -s neptune");  
	command("sleep 5");
	command("tsys");
	command("integrate -s $nflux -t $inttime -w");
#   command("integrate -s 0 -t $inttime -w");
    }
    else {
	print "Uranus is not available now.\n";
    }
    
# Callisto
    $sourceCoordinates=`lookup -s callisto`;
    chomp($sourceCoordinates);
    ($sourceAzDegrees,$sourceElDegrees,$sunDistance)=split(' ',$sourceCoordinates);
    if ($ELLLIMIT<$sourceElDegrees && $sourceElDegrees<$ELULIMIT && $sunDistance>$SUNANGLE) {
	print "Callisto is available, and will be observed right now.\n";
	command("observe -s callisto");
	command("sleep 5");
	command("tsys");
	command("integrate -s $nflux -t $inttime -w");
    }
    else {
	print "Callisto is not available now.\n";
    }
    
# Ganymede
    $sourceCoordinates=`lookup -s ganymede`;
    chomp($sourceCoordinates);
    ($sourceAzDegrees,$sourceElDegrees,$sunDistance)=split(' ',$sourceCoordinates);
    if ($ELLLIMIT<$sourceElDegrees && $sourceElDegrees<$ELULIMIT && $sunDistance>$SUNANGLE) {
	print "Ganymede is available, and will be observed right now.\n";
	command("observe -s ganymede");
	command("sleep 5");
	command("tsys");
	command("integrate -s $nflux -t $inttime -w");
    }
    else {
	print "Ganymede is not available now.\n";
    }
    
# Titan
    $sourceCoordinates=`lookup -s titan`;
    chomp($sourceCoordinates);
    ($sourceAzDegrees,$sourceElDegrees,$sunDistance)=split(' ',$sourceCoordinates);
    if ($ELLLIMIT<$sourceElDegrees && $sourceElDegrees<$ELULIMIT && $sunDistance>$SUNANGLE) {
	print "Titan is now available and will be observed.\n";
	command("observe -s titan");
	command("sleep 5");
	command("tsys");
	command("integrate -s $nflux -t $inttime -w");
#   command("integrate -s 0 -t $inttime -w");
    }
    else {
	print "Titan is not available now.\n";
    }
}
########################
# Start Observing Loop #
########################
$nloop=0;
print "Starting main loop...................\n";
while(1){
    printPID();
    $nloop=$nloop+1;  print "Loop No.= $nloop\n";
    getLST();
    calcEL();
    checkcalEL();
    pickupQS();

    if ($calskip==1) {      # If the calibrator is too high EL ..... or too close to the Sun
        for ($i=0;$i<$num_of_tar;$i++) {
            $Coordtar=`lookup -s $target[$i]`;
            if ($Coordtar eq '') {
                print "#######################################\n";
                print "###### WARNING WARNING WARNING ########\n";
                print "##### source $target[$i] not found. ######\n";
                print "#######################################\n";
                print "Skip $target[$i] ..... \n";
            }
            else {
                chomp($Coordtar);
                ($aztar,$eltar,$suntar)=split(' ',$Coordtar);
                print "$target[$i] at EL=$eltar (Degree) and Az=$aztar (Degree) and SunDist=$suntar (Degree)\n";
                if ($ELLLIMIT<$eltar && $eltar<$ELULIMIT && $suntar>$SUNANGLE) {
                    print "$target[$i] is available, and will be observed right now.\n";
                    $priority[$tarpp[$i]]=-1;
                    command("observe -s $target[$i]");
                    command("sleep 5");
                    command("tsys");
                    command("integrate -s $scan -t $inttime -w");
                }
                else {
                    print "$target[$i] is NOT available now, skip ......\n";
                }
            }
        }
    }
    elsif ($calskip==0)  {  # If the calibrator is available ....
        command("observe -s $calib");
        command("sleep 5");
        command("tsys");
        command("integrate -s $scancal -t $inttime -w");

        for ($i=0;$i<$num_of_tar;$i++) {
            $Coordtar=`lookup -s $target[$i]`;
            if ($Coordtar eq '') {
                print "#######################################\n";
                print "###### WARNING WARNING WARNING ########\n";
                print "##### source $target[$i] not found. ######\n";
                print "#######################################\n";
                print "Skip $target[$i] ..... \n";
            }
            else {
                chomp($Coordtar);
                ($aztar,$eltar,$suntar)=split(' ',$Coordtar);
                print "$target[$i] at EL=$eltar (Degree) and Az=$aztar (Degree) and SunDist=$suntar (Degree)\n";
                if ($ELLLIMIT<$eltar && $eltar<$ELULIMIT && $suntar>$SUNANGLE) {
                    print "$target[$i] is available, and will be observed right now.\n";
                    $priority[$tarpp[$i]]=-1;
                    command("observe -s $target[$i]");
                    command("sleep 5");
                    command("tsys");
                    command("integrate -s $scan -t $inttime -w");
                }
                else {
                    print "$target[$i] is NOT available now, skip ......\n";
                }
            }
        }
    }
    else {                  # If the calibrator is too low EL, finish observations!!
        print "------- Final Calibration ------- \n";
        # Calibrator
        $sourceCoordinates=`lookup -s $calib`;
        chomp($sourceCoordinates);
        ($sourceAzDegrees,$sourceElDegrees,$sunDistance)=split(' ',$sourceCoordinates);
        if (18.0<$sourceElDegrees && $sourceElDegrees<$ELULIMIT && $sunDistance>$SUNANGLE) {
            command("observe -s $calib");
            command("sleep 5");
            command("tsys");
            command("integrate -s $scan -t $inttime -w");
        }
        else {
            print "Calibrator $calib is NOT available now, skip ......\n";
        }

        print "Ending with Uranus and/or Jovian Moons if it is available .....\n";
        # Uranus
        $sourceCoordinates=`lookup -s uranus`;
        chomp($sourceCoordinates);
        ($sourceAzDegrees,$sourceElDegrees,$sunDistance)=split(' ',$sourceCoordinates);
        if ($ELLLIMIT<$sourceElDegrees && $sourceElDegrees<$ELULIMIT && $sunDistance>$SUNANGLE) {
            print "Uranus is available, and will be observed right now.\n";
            command("observe -s uranus");  
            command("sleep 5");
            command("tsys");
            command("integrate -s $nflux -t $inttime -w");
        }
        else {
            print "Uranus is not available now.\n";
        }

        # Callisto
        $sourceCoordinates=`lookup -s callisto`;
        chomp($sourceCoordinates);
        ($sourceAzDegrees,$sourceElDegrees,$sunDistance)=split(' ',$sourceCoordinates);
        if ($ELLLIMIT<$sourceElDegrees && $sourceElDegrees<$ELULIMIT && $sunDistance>$SUNANGLE) {
            print "Callisto is available, and will be observed right now.\n";
            command("observe -s callisto");
            command("sleep 5");
            command("tsys");
            command("integrate -s $nflux -t $inttime -w");
        }
        else {
            print "Callisto is not available now.\n";
        }

        # Ganymede
        $sourceCoordinates=`lookup -s ganymede`;
        chomp($sourceCoordinates);
        ($sourceAzDegrees,$sourceElDegrees,$sunDistance)=split(' ',$sourceCoordinates);
        if ($ELLLIMIT<$sourceElDegrees && $sourceElDegrees<$ELULIMIT && $sunDistance>$SUNANGLE) {
            print "Ganymede is available, and will be observed right now.\n";
            command("observe -s ganymede");
            command("sleep 5");
            command("tsys");
            command("integrate -s $nflux -t $inttime -w");
        }
        else {
            print "Ganymede is not available now.\n";
        }


        print "Flux Observation is done!! \n";
        exit(1);
    }
}



###############
# Subroutines #
###############
sub Usage(){
printf "Usage: flux.pl -c (calibrator name)
options:
-r (restart, skips the flux calibrators.  Be sure to use the same calibrator)
-s (subcompact, sets the lower elevation limit to 33, for use in subcompact configuration)
This script defaults to observing all sources, to observe sources in 
parts of the sky use ONE of the following:
-l (late, observes only rising sources (later HA))
-e (early, observes only setting sources (earlier HA))\n";
}

# --- interrupt handler for CTRL-C ---
sub finish {
   exit(1);
}

# --- print PID ---
# usage: printPID();
sub printPID {
  print "The process ID of this $myname script is $mypid\n";
}

# --- check antennas ---
# usage: checkANT();
# This subroutine checks active antennas and stores them
# as an array @sma.
sub checkANT {
  print "Checking antenna status ... \n";
  for ($i = 1; $i <=8; $i++) {
     $exist = `value -a $i -v antenna_status`;
     chomp($exist);
     if ($exist) {
        print "Found antenna ",$i," in the array!\n";
        @sma = (@sma,$i);
     }
  }
  print "Antennas @sma are going to be used.\n";
}

# --- performs a shell task with delay and printing. ---
sub command {
   my ($a);
   print "@_\n";                        # print the command
   $a=system("@_");                     # execute the command
#   sleep 1;                             # sleep 1 sec
   return $a;
}

# --- get LST in hours ---
# usage: getLST();
# This subroutine updates the global variable $LST, and prints
# its value.
sub getLST {
  $LST= `value -a $sma[0] -v lst_hours`;
  chomp($LST);
  print "LST [hr]= $LST\n";
}


# --- Calculate Elevation for each quasars ---
# usage: calcEL();
sub calcEL {
    print "Looking up available quasars ..........\n";
    for ($i=0;$i<=$#source;$i++) {
        $ha[$i] = $LST*15.0*$deg2rad-$ra[$i] ;  #RA and Dec are both converted to radians eariler in the script
        $sinel[$i] = sin($LAT)*sin($dec[$i])+cos($LAT)*cos($dec[$i])*cos($ha[$i]);
        $cosel[$i] = (1.0 - $sinel[$i]**2.0)**0.5;
        $el[$i] = atan2($sinel[$i],$cosel[$i])*$rad2deg ;
        $ha[$i] = $ha[$i]*$rad2deg/15.0 ;
        if ($ha[$i]>12.0) {$ha[$i]=$ha[$i]-24.0;}
        if ($ha[$i]<-12.0) {$ha[$i]=$ha[$i]+24.0;}

        # print "SINE(EL) = $sinel[$i] \n" ;
        # print "COSINE(EL) = $cosel[$i] \n" ;
        # print "$source[$i] at EL=$el[$i] (Degree) and HA=$ha[$i] (hour)\n"
    }
}

#
# --- Check if your calibrator is usable .... ----
sub checkcalEL {
#    $calname_correct=0;  #this has already been checked now
#    for ($i=0;$i<$num;$i++) {
#        if($source[$i] eq $calib){
#            # $elcal=$el[$i];
#            $calname_correct=1;
#        }
#    }
#    if ($calname_correct==0) {
#        print "Calibrator Name $calib is wrong!! \n";
#        print "Maybe you used B1950 name ...\n";
#        print "Use J2000 name instead of B1950 name.\n";
#        print "Abort this script ....\n";
#        exit(1);
#    }
    $Coordcal=`lookup -s $calib`;  #this too
    if ($Coordcal eq '') {
        print "#######################################\n";
        print "###### ERROR ERROR ERROR ########\n";
        print "##### calibrator $calib not found. ######\n";
        print "#######################################\n";
        print "Abort this script ..... \n";
        exit(1);
    }
    chomp($Coordcal);
    ($azcal,$elcal,$suncal)=split(' ',$Coordcal);
    print "Calibrator $calib at EL=$elcal (Degree) and Az=$azcal (Degree) and SunDist=$suncal (Degree)\n";
    if ($elcal<$ELLLIMIT && $suncal>$SUNANGLE) {
        print "Calibrator $calib is at too low EL=$elcal (deg) ...\n";
        print "                \n";
        print "You may be at the end of the flux track. \n";
        print "Thank you very much for your hard work. \n";
        print "Will do final sequence \n";
        print "                \n";
        print "If you have not done anything yet, \n";
        print "Please wait for a while, or use a different calibrator. \n";
        print "And.... You may kill this script with the process ID $mypid \n";
        $calskip=-1;
#        exit(1);
    }
    elsif ($ELLLIMIT<=$elcal && $elcal<$ELULIMIT && $suncal>$SUNANGLE) {
        print "Calibrator $calib is in the observable EL range.\n";
        $calskip=0;
    }
    else {
        print "Calibrator $calib is at too high EL=$elcal (deg) ... \n";
        print "Or Calibrator $calib is too close to the Sun at $suncal (deg) ... \n";
        $calskip=1;
    }
}


#
# --- Pick Up Quasars to Observe ---
sub pickupQS {
# Priority 1: will be observed as a first priority if it is available
# Priority 0: will be observed randomly
# Priority -1: will not be observed
#

    $num_of_tar=0;

#############################
# Check if all the priority 
#############################
#I moved the canidate finding loops for both 1 and 0 to the first for loop.  It now runs 
#through the whole list once rather then at least twice.  RH
    $num_of_can=0;
    $num_of_can1=0;
    $num_of_can2=0;
    for ($i=0;$i<=$#source;$i++) 
    {
        if ($source[$i] ne $calib && $priority[$i]>-1) {   
            $num_of_can++;
        }
        if ($el[$i]>$ELLLIMIT && $el[$i]<$ELULIMIT && $ha[$i]>$HALLIMIT && $ha[$i]<$HAULIMIT && $source[$i] ne $calib && $priority[$i]==1) {   
            $candidates1[$num_of_can1]=$source[$i];
            $canha1[$num_of_can1]=$ha[$i];
            $canel1[$num_of_can1]=$el[$i];
            $can_num1[$num_of_can1]=$i;
            $num_of_can1++;
        }
	if ($el[$i]>$ELLLIMIT && $el[$i]<$ELULIMIT && $ha[$i]>$HALLIMIT && $ha[$i]<$HAULIMIT && $source[$i] ne $calib && $priority[$i]==0) {   
	    $candidates2[$num_of_can2]=$source[$i];
	    $canha2[$num_of_can2]=$ha[$i];
	    $canel2[$num_of_can2]=$el[$i];
	    $can_num2[$num_of_can2]=$i;
	    $num_of_can2++;
	}
    }
    $numtotal = $num_of_can1 + $num_of_can2;
    print "Number of unobserved quasars except for calibrator is $num_of_can.\n";
    print "Number of unobserved quasars that are currently available: $numtotal.\n";
    if ($num_of_can==0) {
        print("No More Quasar to be observed...., Abort .. \n");
        exit(1);
    }

###########################################################
# First, pick up candidates of the first priority quasars
###########################################################
    print "Number of Available Quasars except for calibrator at the highest priority is $num_of_can1 .\n";


# Switch depending on the number of Available Quasars at the highest priority
#
######################################################
# if there are more than 3 highest priority quasars
######################################################
    if ($num_of_can1>3) {
        $num_of_tar=3;
        $s1=int(rand($num_of_can1));
        $s2=int(rand($num_of_can1));
        while ($s2==$s1){$s2=int(rand($num_of_can1));}
        $s3=int(rand($num_of_can1));
        while ($s3==$s2 || $s3==$s1){$s3=int(rand($num_of_can1));}

        $target[0]=$candidates1[$s1];
        $tarha[0]=$canha1[$s1];
        $tarel[0]=$canel1[$s1];
        $tarpp[0]=$can_num1[$s1];
      #  $priority[$can_num1[$s1]]=-1;
        $target[1]=$candidates1[$s2];
        $tarha[1]=$canha1[$s2];
        $tarel[1]=$canel1[$s2];
        $tarpp[1]=$can_num1[$s2];
      #  $priority[$can_num1[$s2]]=-1;
        $target[2]=$candidates1[$s3];
        $tarha[2]=$canha1[$s3];
        $tarel[2]=$canel1[$s3];
        $tarpp[2]=$can_num1[$s3];
      #  $priority[$can_num1[$s3]]=-1;
    }
######################################################
# if there are exactly 3 highest priority quasars
######################################################
    elsif ($num_of_can1==3){
        $num_of_tar=3;
        $target[0]=$candidates1[0];
        $tarha[0]=$canha1[0];
        $tarel[0]=$canel1[0];
        $tarpp[0]=$can_num1[0];
      #  $priority[$can_num1[0]]=-1;
        $target[1]=$candidates1[1];
        $tarha[1]=$canha1[1];
        $tarel[1]=$canel1[1];
        $tarpp[1]=$can_num1[1];
      #  $priority[$can_num1[1]]=-1;
        $target[2]=$candidates1[2];
        $tarha[2]=$canha1[2];
        $tarel[2]=$canel1[2];
        $tarpp[2]=$can_num1[2];
      #  $priority[$can_num1[2]]=-1;
    }
######################################################
# if there are only 2 highest priority quasars
######################################################
    elsif ($num_of_can1==2){
        $target[0]=$candidates1[0];
        $tarha[0]=$canha1[0];
        $tarel[0]=$canel1[0];
        $tarpp[0]=$can_num1[0];
      #  $priority[$can_num1[0]]=-1;
        $target[1]=$candidates1[1];
        $tarha[1]=$canha1[1];
        $tarel[1]=$canel1[1];
        $tarpp[1]=$can_num1[1];
      #  $priority[$can_num1[1]]=-1;

        # Pick Up Another one from the second priority quasars
        if ($num_of_can2>0) {
            $num_of_tar=3;
            $s1=int(rand($num_of_can2));
            $target[2]=$candidates2[$s1];
            $tarha[2]=$canha2[$s1];
            $tarel[2]=$canel2[$s1];
            $tarpp[2]=$can_num2[$s1];
          #  $priority[$can_num2[$s1]]=-1;
        }
        else {
            $num_of_tar=2;
        }
    }
################################################
# if there is only 1 highest priority quasar
################################################
    elsif ($num_of_can1==1){
        $target[0]=$candidates1[0];
        $tarha[0]=$canha1[0];
        $tarel[0]=$canel1[0];
        $tarpp[0]=$can_num1[0];
      #  $priority[$can_num1[0]]=-1;

        # Pick Up Two more from the second priority quasars
        if ($num_of_can2>2) {
            $num_of_tar=3;
            $s1=int(rand($num_of_can2));
            $s2=int(rand($num_of_can2));
            while ($s2==$s1){$s2=int(rand($num_of_can2));}
            $target[1]=$candidates2[$s1];
            $tarha[1]=$canha2[$s1];
            $tarel[1]=$canel2[$s1];
            $tarpp[1]=$can_num2[$s1];
         #   $priority[$can_num2[$s1]]=-1;
            $target[2]=$candidates2[$s2];
            $tarha[2]=$canha2[$s2];
            $tarel[2]=$canel2[$s2];
            $tarpp[2]=$can_num2[$s2];
         #   $priority[$can_num2[$s2]]=-1;
        }
        elsif ($num_of_can2==2) {
            $num_of_tar=3;
            $target[1]=$candidates2[0];
            $tarha[1]=$canha2[0];
            $tarel[1]=$canel2[0];
            $tarpp[1]=$can_num2[0];
          #  $priority[$can_num2[0]]=-1;
            $target[2]=$candidates2[1];
            $tarha[2]=$canha2[1];
            $tarel[2]=$canel2[1];
            $tarpp[2]=$can_num2[1];
          #  $priority[$can_num2[1]]=-1;
        }
        elsif ($num_of_can2==1) {
            $num_of_tar=2;
            $target[1]=$candidates2[0];
            $tarha[1]=$canha2[0];
            $tarel[1]=$canel2[0];
            $tarpp[1]=$can_num2[0];
          #  $priority[$can_num2[0]]=-1;
        }
        else {
            $num_of_tar=1;
        }
    }
######################################################
# if there is no highest priority quasars
######################################################
    else {
        if ($num_of_can2<4) {
            $num_of_tar=$num_of_can2;
            @target=@candidates2;
            @tarha=@canha2;
            @tarel=@canel2;
            for ($j=0;$j<$num_of_can2;$j++) {
                $tarpp[$j]=$can_num2[$j];
              #  $priority[$can_num2[$j]]=-1;
            }
        }
        else {
            $num_of_tar=3;
            $s1=int(rand($num_of_can2));
            $s2=int(rand($num_of_can2));
            while ($s2==$s1){$s2=int(rand($num_of_can2));}
            $s3=int(rand($num_of_can2));
            while ($s3==$s2 || $s3==$s1){$s3=int(rand($num_of_can2));}

            $target[0]=$candidates2[$s1];
            $tarha[0]=$canha2[$s1];
            $tarel[0]=$canel2[$s1];
            $tarpp[0]=$can_num2[$s1];
           # $priority[$can_num2[$s1]]=-1;
            $target[1]=$candidates2[$s2];
            $tarha[1]=$canha2[$s2];
            $tarel[1]=$canel2[$s2];
            $tarpp[1]=$can_num2[$s2];
           # $priority[$can_num2[$s2]]=-1;
            $target[2]=$candidates2[$s3];
            $tarha[2]=$canha2[$s3];
            $tarel[2]=$canel2[$s3];
            $tarpp[2]=$can_num2[$s3];
           # $priority[$can_num2[$s3]]=-1;
        }
    }

    print "Calibrator = $calib \n";
    print "-------------------------------------------------------------\n";
    print "If Calibrator is available\n";
    for ($i=0;$i<$num_of_tar;$i++) {
        print "$nicname will observe $target[$i] at Hour Angle=$tarha[$i] and EL=$tarel[$i] \n";
    }
}


#The function to get the sources from the file in /global
sub getSources {
$lastmonth = time - 2592000; #one month: 2592000
$day = (gmtime $lastmonth)[3];
$month = (gmtime $lastmonth)[4];
$year = (gmtime $lastmonth)[5];
$year += 1900;
$month++;
if($day < 10)
{
    $day = '0' . $day;
}
if($month < 10)
{
    $month = '0' . $month;
}
$MINDate = $year . $month . $day;
@fluxdata = ();  #each line in the file split on commas
@fluxdate = ();  #the date part of the file split on a space
$fsource = 'hi';
$num = 0;
@newsourcelist = ();
open(DATA, "</global/catalogs/callist/recent_flux_measurements.dat");
$line = $_;
while(<DATA>)
{
    unless($line =~ /^\#/)  #skips anyline that starts with #
    {
	@fluxdata = split(",", $line);
	$uselessnum = split(" ", $fluxdata[2]); #not actually useless
	if($uselessnum == 1)  #this is zero if there's whitespace, so it carries the J2000 name to lines that are only white
	{
	    $fsource = $fluxdata[2];
	}
#	print "$fsource\n";
#	print "$uselessnum\n";
	if($fluxdata[7] =~ /SMA/)  #only sources observed at the sma
	{
#	    print "the above source is an SMA source!\n";
	    if($freq eq '')
	    {
		print "The current frequency couldn't be found, using 230.\n";
		$freq = "1mm";
	    }
	    if($fluxdata[5] eq $freq) #only look at sources in the requested band
	    {
		@fluxdate = split(" ",$fluxdata[6]);
		$flux_month = $fluxdate[1];
		if ($flux_month eq "Jan")  {
		    $flux_month = "01";
		}
		if ($flux_month eq "Feb")  {
		    $flux_month = "02";
		}
		if ($flux_month eq "Mar")  {
		    $flux_month = "03";
		}
		if ($flux_month eq "Apr")  {
		    $flux_month = "04";
		}
		if ($flux_month eq "May")  {
		    $flux_month = "05";
		}
		if ($flux_month eq "Jun")  {
		    $flux_month = "06";
		}
		if ($flux_month eq "Jul")  {
		    $flux_month = "07";
		}
		if ($flux_month eq "Aug")  {
		    $flux_month = "08";
		}
		if ($flux_month eq "Sep")  {
		    $flux_month = "09";
		}
		if ($flux_month eq "Oct")  {
		    $flux_month = "10";
		}
		if ($flux_month eq "Nov")  {
		    $flux_month = "11";
		}
		if ($flux_month eq "Dec")  {
		    $flux_month = "12";
		}
		$newfluxdate = $fluxdate[2] . $flux_month . $fluxdate[0];
#		print "The current source is: $fsource, and it's most recent $FREQ flux measurement was on: $newfluxdate\n"; 
		if($newfluxdate gt $MINDate)
		{
		    $newsourcelist[$num] = $fsource;
		    $num++;
		}
	    }
	}
    }
    $line = $_;
}
close(DATA);

return @newsourcelist;
}
