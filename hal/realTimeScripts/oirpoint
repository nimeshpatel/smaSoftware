#!/bin/tcsh -vf
#
# modified from orpoint by Todd, not yet tested at all
#
set list = ""  # list of antennas
set alist = "" # list of antennas prepended with -a, or blank if using project
set args = $#argv
set antennawaitarcsec = 2
set source = "none"
set isource = "none"
set star = "none"
set zerooffsets = 0
foreach i ( $argv )
  if (`expr $i == '-h'`) then
    goto usage
  endif
  if (`expr $i == '--help'`) then
    goto usage
  endif
  if (`expr $i == '-a'` || `expr $i == '--antenna'`) then
    if (`expr $ctr != $args`) then
      set ctr = `expr $ctr + 1`
      set list = $argv[$ctr]
      set alist = "-a $list"
      echo will use antenna argument = $alist
    else
      echo You must supply a list of antennas after -a
      goto usage
    endif
    continue
  endif
  if (`expr $i == '-w'`) then
      set ctr = `expr $ctr + 1`
      set antennawaitarcsec = $argv[$ctr]
      continue
  endif
  if (`expr $i == '-r'`) then
    if (`expr $ctr != $args`) then
      set ctr = `expr $ctr + 1`
      set source = $argv[$ctr]
    else
      echo You must supply an rscan source name after -r
      goto usage
    endif
    continue
  endif
  if (`expr $i == '-i'`) then
    if (`expr $ctr != $args`) then
      set ctr = `expr $ctr + 1`
      set isource = $argv[$ctr]
    else
      echo You must supply an ipoint source name after -i
      goto usage
    endif
    continue
  endif
  if (`expr $i == '-o'`) then
    if (`expr $ctr != $args`) then
      set ctr = `expr $ctr + 1`
      set star = $argv[$ctr]
    else
      echo You must supply an optical star name after -o
      echo Use the azelstar command to find a star near your source.
      goto usage
    endif
    continue
  endif
end

if (`expr $source == 'none'`) then
  echo You must provide an rscan source name with -r
  goto usage
endif

if (`expr $isource == 'none'`) then
  echo You must provide an ipoint source name with -i
  goto usage
endif

if (`expr $star == 'none'`) then
  echo You must provide an optical star name with -o
  goto usage
endif

echo `date -u +"%a %b %d %X %Y"` '('$USER'):' $0 $argv >> /rootfs/logs/SMAshLog

if (`expr "$list" == ""`) then
  set checklist = `getAntList`
  echo Will use all antennas in the current project = $checklist
  set alist = ""
  set project = 1
else
  echo Will use antennas: $list
  set checklist = `getAntList $alist`
  set project = 0
endif
set commalist = `commaAntennaList "$checklist"`
echo commalist = $commalist
#
integrationTime -s 50
while (1)
    if (`expr "$list" == ""`) then
	observe -s $source
        sleep 1 
        wait
    else
      foreach a ( $checklist )
        observe -s $source -a $a
        sleep 1
        wait
      end
    endif
    if (`expr $zerooffsets == 1`) then
	foreach a ( $checklist )
	  azoff -s 0 -a $a
    	  sleep 1
	  wait
	  eloff -s 0 -a $a
	  sleep 1
	  wait
	end
    endif
    startChopping -a $commalist
    radio 
    antennaWait -e $antennawaitArcsec -a $commalist
    rscan -s mars -c -t 1 -o 2 -v 1,2
    wait

    if (`expr "$list" == ""`) then
	observe -s $isource
        sleep 1
    else
      foreach a ( $checklist )
        observe -s $isource -a $a
        sleep 1
        wait
      end
    endif
    stopChopping -a $commalist
    sleep 1
    wait
    if (`expr $zerooffsets == 1`) then
	foreach a ( $checklist )
  	  azoff -s 0 -a $a
	  sleep 1
	  wait
	  eloff -s 0 -a $a
	  sleep 1
	  wait
	end
    endif
    antennaWait -e $antennawaitArcsec -a $commalist
    point -a $commalist -i 60 -r 1 -t -l -L
    wait

    optical
    wait
    if (`expr $zerooffsets == 1`) then
	foreach a ( $checklist )
	  azoff -s 0
	  sleep 1
	  wait
	  eloff -s 0
	  sleep 1
	  wait
        end
    endif
    if (`expr "$list" == ""`) then
      observe -s $star
    else
      foreach a ( $checklist )
        observe -s $star -a $a
        sleep 1
        wait
      end
    endif
    antennaWait -e $antennawaitArcsec -a $commalist
    foreach a ( $checklist )
      snapshot -a $a -s 100
      sleep 1
      wait
    end
end

usage:
  echo "orpoint -r <rscanSourceName> -i <ipointSourceName> -o <opticalStarName> [-a <antennaList: comma-delimited>]"
  echo "   It will run forever (or until you hit control-c)."
  echo "   Please note that no cleanup is attempted after control-c."
  exit 0
